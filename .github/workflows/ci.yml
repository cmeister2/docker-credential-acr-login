on:
  push:
    tags:
      # Full version
      - "[0-9]+.[0-9]+.[0-9]+"
      # Prerelease version
      - "[0-9]+.[0-9]+.[0-9]+-*"

  pull_request:
    branches:
      # Trigger on pull requests into main
      - main
    types: [ opened, synchronize ]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.70.0
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.70.0
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.70.0
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.70.0
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - run: cargo clippy -- -D warnings

  tarpaulin:
    name: Tarpaulin
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo install cargo-tarpaulin
      - run: cargo tarpaulin --out xml
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cobertura.xml
          verbose: true

  publish:
    runs-on: ubuntu-latest
    needs:
      - check
      - test
      - fmt
      - clippy
      - tarpaulin
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Publish to crates.io on tags
        run: cargo publish
        if: startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.PUBLISH_SECRET }}
      - name: Dry-run publish on non-tags
        run: cargo publish --dry-run
        if: startsWith(github.ref, 'refs/tags/') != true
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.PUBLISH_SECRET }}
